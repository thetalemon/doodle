---
import Header from '@/components/layout/Header.astro'
import Footer from '@/components/layout/Footer.astro'
import GoTop from '@/components/GoTop.astro'

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.ico" sizes="32x32" />
    <link rel="icon" href="/icon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/manifest.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="まなさすのらくがき倉庫" />
    <meta property="og:site_name" content="北極の らくがき倉庫" />
    <meta property="og:title" content={title} />
    <meta property="og:url" content="https://doodle.manasas.dev" />
    <meta property="og:description" content="まなさすのらくがき倉庫" />
    <meta property="og:image" content="https://manasas.dev/ogp.png" />
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <main>
      <slot />
      <GoTop />
    </main>
    <Footer />
  </body>
</html>

<script>
  const images = document.querySelectorAll('.js-content')
  images.forEach((image) => {
    image.addEventListener('click', () => {
      const div = document.createElement('div')
      div.classList.add('js-imageModal')

      const modalContetElement = document.createElement('div')
      modalContetElement.classList.add('js-imageModalContent')

      const img = document.createElement('img')
      img.src = image.getAttribute('src') as string
      img.classList.add('js-imageInModal')

      const p = document.createElement('p')
      p.textContent = image.getAttribute('alt') as string
      p.classList.add('js-descpriontInModal')

      document.body.style.overflow = 'hidden'
      div.appendChild(modalContetElement)
      modalContetElement.appendChild(img)
      modalContetElement.appendChild(p)
      document.body.appendChild(div)

      div.addEventListener('click', () => {
        div.remove()
        document.body.style.overflow = 'scroll'
      })
    })
  })
</script>

<style lang="scss">
  main {
    width: 900px;
    max-width: calc(100% - 24px * 2);
    // 全体 - ヘッダ - フッタ - フッタ上余白
    min-height: calc(100vh - 255px - 26px - 64px);
    @media screen and (max-width: 900px) {
      // 全体 - ヘッダ小さめ - フッタ
      min-height: calc(100vh - 100px - 26px);
    }
    margin: 0 auto;
    padding: 0 24px;
    background: #fff;
    color: #c4427a;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    @media screen and (max-width: 900px) {
      max-width: calc(100% - 16px * 2);
      padding: 0 16px;
    }
  }
  html {
    font-family: system-ui, sans-serif;
    background: #ff94c2;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    font-size: 20px;
    line-height: 1.6;
  }
  body {
    margin: 0;
    width: 100%;
  }
</style>

<style is:global lang="scss">
  h2 {
    margin: 24px 0 0 0;
  }
  ul {
    list-style: none;
    padding: 0;
  }
  a {
    color: #990033;
    &:hover {
      opacity: 0.5;
    }
  }
</style>

<style is:global lang="scss">
  .js-imageModal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 1000;
    cursor: zoom-out;
    .js-imageModalContent {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 80%;
      height: 80%;
      object-fit: contain;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .js-imageInModal {
        height: 90%;
        width: 100%;
        object-fit: contain;
      }
      .js-descpriontInModal {
        color: white;
        text-align: center;
      }
    }
  }
</style>
