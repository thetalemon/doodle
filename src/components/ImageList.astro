---
import { Image } from 'astro:assets'
import type { ImageListItem } from '../type/images'
import ImgNew from './new.svg'

interface Props {
  list: ImageListItem[]
  title: string
  id?: string
}

const { list, title, id } = Astro.props

const ITEM_BOX_SIZE = 280

const calcWidthAndHeight = (image: ImageMetadata) => {
  const width = Number(image.width)
  const height = Number(image.height)
  if (width > height) {
    const ratio = ITEM_BOX_SIZE / width
    const calcedWidth = width > ITEM_BOX_SIZE ? ITEM_BOX_SIZE : width
    const calcedHeight = height * ratio
    return {
      width: calcedWidth,
      height: calcedHeight,
    }
  } else {
    const ratio = ITEM_BOX_SIZE / height
    const calcedWidth = width * ratio
    const calcedHeight = height > ITEM_BOX_SIZE ? ITEM_BOX_SIZE : height
    return {
      width: calcedWidth,
      height: calcedHeight,
    }
  }
}

const mappedItems = list.map((item) => {
  const wh = calcWidthAndHeight(item.image)

  return {
    image: {
      src: item.image.src,
      width: wh.width,
      height: wh.height,
      format: item.image.format,
    } as ImageMetadata,
    alt: item.alt,
    new: item.new,
  }
})
---

<h2 id={id}>{title}</h2>
<ul>
  {
    mappedItems.map((item) => (
      <li>
        <Image
          src={item.image}
          alt=""
          class="js-content mainImage"
          loading="lazy"
          widths={[300]}
          sizes={`${ITEM_BOX_SIZE}px`}
        />
        {item.new && <Image class="new" src={ImgNew} alt="new" width={40} />}
        <div class="alt">{item.alt}</div>
      </li>
    ))
  }
</ul>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: repeat(auto-fill, 300px);
    row-gap: 32px;
    justify-content: center;
  }
  li {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    .mainImage {
      border: 2px solid rgba(196, 66, 122, 0.2);
      width: 90%;
      height: auto;
    }
    .alt {
      padding-top: 8px;
      text-align: center;
      width: 280px;
      height: 2.2rem;
    }
    .new {
      padding-top: 8px;
    }
  }
</style>
