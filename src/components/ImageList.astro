---
import { Image } from "astro:assets";
import type { ImageListItem } from "../type/images";

interface Props {
  list: ImageListItem[];
  title: string;
}

const { list, title } = Astro.props;

const ITEM_BOX_SIZE = 280;

const calcWidthAndHeight = (image: ImageMetadata) => {
  const width = Number(image.width);
  const height = Number(image.height);
  if (width > height) {
    const ratio = ITEM_BOX_SIZE / width;
    const calcedWidth = width > ITEM_BOX_SIZE ? ITEM_BOX_SIZE : width;
    const calcedHeight = height * ratio;
    return {
      width: calcedWidth,
      height: calcedHeight,
    };
  } else {
    const ratio = ITEM_BOX_SIZE / height;
    const calcedWidth = width * ratio;
    const calcedHeight = height > ITEM_BOX_SIZE ? ITEM_BOX_SIZE : height;
    return {
      width: calcedWidth,
      height: calcedHeight,
    };
  }
};

const mappedItems = list.map((item) => {
  const wh = calcWidthAndHeight(item.image);

  return {
    image: {
      src: item.image.src,
      width: wh.width,
      height: wh.height,
      format: item.image.format,
    } as ImageMetadata,
    alt: item.alt,
  };
});
---

<h2>{title}</h2>
<ul>
  {
    mappedItems.map((item) => (
      <li>
        <Image src={item.image} alt={item.alt} class="js-content" />
        <div class="alt">{item.alt}</div>
      </li>
    ))
  }
</ul>

<style lang="scss">
  h2 {
    margin-left: 1rem;
  }
  ul {
    display: grid;
    grid-template-columns: repeat(auto-fill, 300px);
    row-gap: 32px;
    justify-content: center;
  }
  li {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    .alt {
      padding-top: 0.5rem;
      text-align: center;
      width: 280px;
    }
  }
</style>
